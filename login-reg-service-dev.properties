spring.profiles.active=dev
spring.application.name=login-reg-service
#spring.datasource.url=jdbc:postgresql://appdev.in01.dru.care:5432/drucare_dev_fkey

#spring.datasource.url=jdbc:postgresql://appqa.in01.dru.care:5432/drucare_qa
spring.datasource.url=jdbc:postgresql://appdev.in01.dru.care:5432/drucare_dev
#spring.datasource.url=jdbc:postgresql://dru.care:5432/drucare_prod
spring.datasource.username=drucare_appuser
spring.datasource.password=druCare123$
# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=20
# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=30
# Validate the connection before borrowing it from the pool.
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.min-idle=10
spring.datasource.tomcat.time-between-eviction-runs-millis=3000
spring.datasource.tomcat.validation-query=SELECT 1
spring.datasource.tomcat.validation-query-timeout=3000
#<!-- server.contextPath=/dru -- DB pwd: Care@123>
server.contextPath=/login
server.port=0
#server.ssl.key-store=//opt/app/keystore.jks/
#server.ssl.key-store-password: drucare1
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: JohnsPrivateKey.store
logging.file=/logs/loginreg.log
#logging.level.com.drucare = debug

# Adding sql.properties entries here for testing 

queries.regEmployee = INSERT INTO EMPLOYEES_INFO_REF(EMP_ID,EMP_USER_NM, EMP_PASSWORD,FIRST_NM, DOCTOR_REGISTER_NO, EMAIL_ID, MOBILE_NO, PINCODE,ORG_ID,ORG_GRP_ID,IS_SHAREABLE) VALUES (:EMP_ID,:EMP_USER_NM, :EMP_PASSWORD,:FIRST_NM, :DOCTOR_REGISTER_NO, :EMAIL_ID,:MOBILE_NO, :PINCODE,:ORG_ID,:ORG_GRP_ID,:IS_SHAREABLE) 

queries.addEmployee = INSERT INTO EMPLOYEES_INFO_REF(EMP_ID,EMP_USER_NM, EMP_PASSWORD,FIRST_NM, EMAIL_ID,MOBILE_NO, EMP_CODE,CREATED_USR_ID,ORG_ID,LOGIN_STATUS,ORG_GRP_ID,IS_SHAREABLE,USER_TYPE) VALUES (:EMP_ID,:EMP_USER_NM, :EMP_PASSWORD,:FIRST_NM,:EMAIL_ID,:MOBILE_NO, :EMP_CODE,:CREATED_USR_ID,:ORG_ID,:LOGIN_STATUS,:ORG_GRP_ID,:IS_SHAREABLE,:USER_TYPE)

queries.orgEmpMapping = INSERT INTO ORGANISATION_EMPLOYEE_XREF(ORG_ID,EMP_ID,EMP_START_DT,CREATED_USR_ID,IS_SHAREABLE,ORG_GRP_ID) VALUES (:ORG_ID,:EMP_ID,:EMP_START_DT,:CREATED_USR_ID,:IS_SHAREABLE,:ORG_GRP_ID)

queries.fetchEmployee = SELECT EMP_ID,IMAGE_PATH,EMP_USER_NM,EMP_PASSWORD, FIRST_NM, EMAIL_ID, MOBILE_NO, PINCODE, ORG_ID,ORG_GRP_ID,LOGIN_STATUS,USER_TYPE FROM EMPLOYEES_INFO_REF EMP WHERE ISACTIVE=TRUE AND EMP_USER_NM = :EMP_USER_NM
#queries.listEmployeesforgroup = SELECT EMP_ID, EMP_USER_NM,EMP_PASSWORD,EMP_CODE, FIRST_NM, EMAIL_ID, MOBILE_NO, PINCODE, ORG_ID,ORG_GRP_ID,LOGIN_STATUS, IS_SHAREABLE FROM EMPLOYEES_INFO_REF EMP WHERE  ISACTIVE=TRUE AND ORG_ID=0 AND ORG_GRP_ID=:ORG_GRP_ID ORDER BY EMP_ID
 
queries.listEmployeesForOrg=SELECT EMP.EMP_ID,EMP.image_path, EMP.IS_SHAREABLE, EMP.EMP_USER_NM,EMP.EMP_PASSWORD, EMP.EMP_CODE, EMP.FIRST_NM, EMP.EMAIL_ID, EMP.MOBILE_NO, EMP.PINCODE, EMP.ORG_ID, EMP.ORG_GRP_ID, EMP.LOGIN_STATUS FROM EMPLOYEES_INFO_REF EMP JOIN ORGANISATION_EMPLOYEE_XREF ORGEMP ON EMP.EMP_ID=ORGEMP.EMP_ID AND ORGEMP.ORG_ID=:ORG_ID AND ORGEMP.ISACTIVE=TRUE WHERE EMP.ISACTIVE=TRUE AND  EMP.ORG_GRP_ID =:ORG_GRP_ID  ORDER BY  EMP.EMP_USER_NM

#queries.listEmployeesForOrg=SELECT EMP_ID,IS_SHAREABLE,EMP_USER_NM,EMP_PASSWORD,EMP_CODE, FIRST_NM, EMAIL_ID, MOBILE_NO, PINCODE, ORG_ID,ORG_GRP_ID,LOGIN_STATUS FROM EMPLOYEES_INFO_REF WHERE ISACTIVE=TRUE AND ORG_GRP_ID =:ORG_GRP_ID AND EMP_ID IN (SELECT EMP_ID FROM ORGANISATION_EMPLOYEE_XREF WHERE ORG_ID = :ORG_ID)

queries.adminUpdateOrganizationInfo=UPDATE PUBLIC.ORGANISATION_REF SET REGISTER_NO = :REGISTER_NO, DM_HM_NO = :DM_HM_NO, ROHINI_NO = :ROHINI_NO, SERVICE_TAX_NO = :SERVICE_TAX_NO, TAN_NO = :TAN_NO, PROFILE_NM = :PROFILE_NM  WHERE ORG_ID = :ORG_ID AND ORG_GRP_ID=:ORG_GRP_ID ;
#O_ORGANISATION_CONTACTNUMBER = :O_ORGANISATION_CONTACTNUMBER, CONTACTNUMBER_ONE = :CONTACTNUMBER_ONE, CONTACTNUMBER_TWO = :CONTACTNUMBER_TWO, WEBSITE_ADDRESS = :WEBSITE_ADDRESS, O_ORGANISATION_CONTACTFAX = :O_ORGANISATION_CONTACTFAX, EMR_CONTACTNUMBER = :EMR_CONTACTNUMBER,
#queries.adminFetchOrganizationInfo = SELECT * FROM PUBLIC.ORGANISATION_REF WHERE O_ORGANISATION_ID = :ORGANISATIONID


queries.adminFetchOrganizationInfo = SELECT ORGREF.*,HBTREF.NO_OF_BED FROM ORGANISATION_REF ORGREF JOIN HOS_BED_TYPE_REF HBTREF ON ORGREF.HOS_BED_TYPE_ID=HBTREF.HOS_BED_TYPE_ID AND ORGREF.ORG_ID=:ORGANISATIONID AND ORGREF.ORG_GRP_ID=:ORGGROUPID
 									 #SELECT ORGANISATION_REF.*, ORGANISATION_TYPE_REF.OT_ORG_TYPE FROM ORGANISATION_REF INNER JOIN ORGANISATION_TYPE_REF ON ORGANISATION_REF.O_BEDS_TYPE=ORGANISATION_TYPE_REF.OT_ORGTYPE_ID and ORGANISATION_REF.O_ORGANISATION_ID=:ORGANISATIONID  and ORGANISATION_REF.ORG_GRP_ID=:ORGGROUPID   
queries.regEmployeeRole = INSERT INTO PUBLIC.EMPLOYEE_ROLE_XREF(EMP_ID,ROLE_ID,START_DT,CREATED_USR_ID,ORG_ID,ORG_GRP_ID,MOD_ID) VALUES (:EMP_ID,:ROLE_ID,:START_DT,:CREATED_USR_ID,:ORG_ID,:ORG_GRP_ID,:MOD_ID)

queries.fetchEmployeeRole=SELECT ROLE_ID FROM PUBLIC.EMPLOYEE_ROLE_XREF WHERE EMP_ID = :EMP_ID

queries.forgotPasswordForEmployee = SELECT EMP_USER_NM,EMAIL_ID,MOBILE_NO FROM EMPLOYEES_INFO_REF WHERE EMP_USER_NM=:EMP_USER_NM

queries.updatePwdByUserName = UPDATE EMPLOYEES_INFO_REF SET EMP_PASSWORD= :EMP_PASSWORD WHERE EMP_USER_NM= :EMP_USER_NM

queries.forgotPasswordForPatient = SELECT PATIENT_USER_NM,EMAIL_ID,MIDDLE_NM FROM PATIENT_INFO_REF WHERE PATIENT_USER_NM=:PATIENT_USERNAME 


queries.updatePatientPwdByUserName = UPDATE PATIENT_INFO_REF SET PATIENT_PASSWORD= :PATIENT_PASSWORD WHERE PATIENT_USER_NM= :PATIENT_USER_NM

queries.forgotUserNameForEmployee = SELECT EMP_USER_NM FROM PUBLIC.EMPLOYEES_INFO_REF WHERE  EMAIL_ID=:EMAIL_ID OR MOBILE_NO =:MOBILE_NO

queries.forgotUserNameForPatient = SELECT PATIENT_USER_NM FROM PUBLIC.PATIENT_INFO_REF WHERE EMAIL_ID=:EMAIL_ID OR MOBILE_NO=:MOBILE_NO


 queries.updatePatientPersonalInfo=UPDATE PATIENT_INFO_REF SET  FIRST_NM=:FIRST_NM,AADHAAR_NO=:AADHAAR_NO,MIDDLE_NM=:MIDDLE_NM,EMAIL_ID=:EMAIL_ID WHERE PATIENT_ID=:PATIENT_ID;


 queries.updatePatientAddressInfo=UPDATE PATIENT_INFO_REF SET COUNTRY_NM=:COUNTRY_NM,STATE_NM=:STATE_NM,DISTRICT_NM=:DISTRICT_NM,CITY_NM=:CITY_NM,ADDRESS_LINE1=:ADDRESS_LINE1,ADDRESS_LINE2=:ADDRESS_LINE2 WHERE PATIENT_ID=:PATIENT_ID;
 
queries.updatePatientEmergencyInfo=UPDATE PATIENT_INFO_REF SET EMERGENCY_CONTACT_AADHAAR_NO=:EMERGENCY_CONTACT_AADHAAR_NO,EMERGENCY_CONTACT_LANGUAGE=:EMERGENCY_CONTACT_LANGUAGE,EMERGENCY_CONTACT_NM=:EMERGENCY_CONTACT_NM,EMERGENCY_CONTACT_EMAIL_ID=:EMERGENCY_CONTACT_EMAIL_ID,EMERGENCY_CONTACT_NO=:EMERGENCY_CONTACT_NO WHERE PATIENT_ID=:PATIENT_ID;



queries.updateEmployeePersonalInfo=UPDATE EMPLOYEES_INFO_REF SET FIRST_NM=:FIRST_NM,MOBILE_NO=:MOBILE_NO,EMAIL_ID=:EMAIL_ID,ALTERNATE_CONTACT_NO=:ALTERNATE_CONTACT_NO WHERE  EMP_ID=:EMP_ID ;

queries.editemployee=UPDATE	EMPLOYEES_INFO_REF SET FIRST_NM=:FIRST_NM,EMP_CODE=:EMP_CODE,EMAIL_ID=:EMAIL_ID,MOBILE_NO=:MOBILE_NO WHERE  EMP_ID=:EMP_ID;
#queries.insertlistindicators = INSERT INTO QUALITY.ORGANISATION_INDICATORS_XREF(INDICATOR_ID,ORG_ID, START_DT,END_DT, IS_ACTIVE) VALUES (:INDICATOR_ID,:ORG_ID, :START_DT,:END_DT, :IS_ACTIVE)
queries.insertlistindicators = INSERT INTO QUALITY.ORGANISATION_INDICATORS_XREF(INDICATOR_ID,ORG_ID, START_DT,END_DT, IS_ACTIVE,ORG_GRP_ID) VALUES (:INDICATOR_ID,:ORG_ID, :START_DT,:END_DT, :IS_ACTIVE,:ORG_GRP_ID)

			

queries.addEmployeeOrgGroup = INSERT INTO EMPLOYEES_INFO_REF(EMP_ID,EMP_USER_NM, EMP_PASSWORD,FIRST_NM,ORG_GRP_ID) VALUES (:EMP_ID,:EMP_USER_NM, :EMP_PASSWORD,:FIRST_NM,:ORG_GRP_ID)

#queries.regOrgGroup = INSERT INTO PUBLIC.ORGANISATION_GROUP_REF_ref(ORG_GRP_NAME,ORG_GRP_CONTACTNUMBER,ORG_GRP_CONTACTMAIL,PINCODE) VALUES (:ORG_GRP_NAME,:ORG_GRP_CONTACTNUMBER, :ORG_GRP_CONTACTMAIL,:PINCODE)



#queries.fetchOrgType = SELECT OT_ORGTYPE_ID,OT_ORG_TYPE FROM PUBLIC.ORGANISATION_TYPE_REF WHERE OT_ISACTIVE=TRUE;

queries.insertScreen = INSERT INTO SCREENS_REF(SCREEN_NM,SCREEN_URL,MOD_ID,DESCRIPTION,ISACTIVE,CREATED_USR_ID) VALUES (:SCREEN_NM,:SCREEN_URL,:MOD_ID,:DESCRIPTION,:ISACTIVE,:CREATED_USR_ID)

queries.fetchRolesref=SELECT * FROM ROLES_REF WHERE ISACTIVE =TRUE ORDER BY ROLE_NM;

#queries.fetchScreens = SELECT * FROM SCREENS_REF WHERE ISACTIVE = :ISACTIVE 

queries.fetchScreens = SELECT * FROM SCREENS_REF WHERE ISACTIVE = :ISACTIVE ORDER BY SCREEN_NM

queries.deleteScreens = UPDATE SCREENS_REF SET ISACTIVE= :ISACTIVE WHERE SCREEN_ID= :SCREEN_ID

queries.editScreen= UPDATE SCREENS_REF SET SCREEN_NM=:SCREEN_NM,SCREEN_URL=:SCREEN_URL,MOD_ID=:MOD_ID,DESCRIPTION=:DESCRIPTION WHERE SCREEN_ID=:SCREEN_ID;

queries.insertRoleref= INSERT INTO ROLES_REF (ROLE_ID,ROLE_NM,R_MOD_ID,DESCRIPTION,ISACTIVE,CREATED_USR_ID,ORG_ID,ORG_GRP_ID,CREATED_DTTM) VALUES (:ROLE_ID, :ROLE_NM, :MODULE_ID, :DESCRIPTION, :ISACTIVE, :CREATED_USR_ID,:ORG_ID,:ORG_GRP_ID :CREATED_DTTM) 

queries.updateRoleref= UPDATE ROLES_REF SET R_ROLE=:R_ROLE, R_MODULE_ID=:R_MODULE_ID, R_DESCRIPTION=:R_DESCRIPTION, R_ISACTIVE=:R_ISACTIVE, CREATED_USR_ID=:CREATED_USR_ID, CREATED_ROLE_ID=:CREATED_ROLE_ID, CREATED_MOD_ID=:CREATED_MOD_ID, CREATED_DTTM=CREATED_DTTM  WHERE R_ROLEID=:R_ROLEID
queries.deleteRolesref=UPDATE ROLES_REF SET R_ISACTIVE= :R_ISACTIVE WHERE R_ROLEID= :R_ROLEID
queries.deleteOrganization=UPDATE PUBLIC.ORGANISATION_REF SET ISACTIVE=:ISACTIVE WHERE ORG_ID=:ORG_ID AND ORG_GRP_ID=:ORG_GRP_ID;
#In this query SCRNS.SCREEN_ID!=5  written because Branch Management screen is visible only for SuperAdmin
queries.listOfScreens=SELECT :ROLE_ID as ROLE_ID,:MOD_ID as MOD_ID, RLSCR.ROLE_SCREEN_ID, RLSCR.ISACTIVE, SCRNS.SCREEN_ID, SCRNS.SCREEN_NM, RLSCR.PRIVILEGE_ID FROM PUBLIC.SCREENS_REF SCRNS JOIN PUBLIC.ORGANISATION_MODULE_XREF OMS ON SCRNS.MOD_ID=OMS.MOD_ID LEFT JOIN PUBLIC.ROLE_SCREEN_XREF RLSCR ON SCRNS.SCREEN_ID=RLSCR.SCREEN_ID AND RLSCR.ROLE_ID=:ROLE_ID WHERE OMS.MOD_ID=:MOD_ID AND OMS.ORG_ID=:ORG_ID AND OMS.ORG_GRP_ID=:ORG_GRP_ID AND SCRNS.ISACTIVE=true  AND SCRNS.SCREEN_ID!=5 ORDER BY SCRNS.SCREEN_NM;
#In this query SCRNS.SCREEN_ID!=5  written because Branch Management screen is visible only for SuperAdmin
queries.listOfUniversalScreens=SELECT :ROLE_ID as ROLE_ID,:MOD_ID as MOD_ID, RLSCR.ROLE_SCREEN_ID, RLSCR.ISACTIVE, SCRNS.SCREEN_ID, SCRNS.SCREEN_NM, RLSCR.PRIVILEGE_ID FROM PUBLIC.SCREENS_REF SCRNS JOIN PUBLIC.ORGANISATION_MODULE_XREF OMS ON SCRNS.MOD_ID=OMS.MOD_ID AND oms.org_id=:ORG_ID LEFT JOIN PUBLIC.ROLE_SCREEN_XREF RLSCR ON SCRNS.SCREEN_ID=RLSCR.SCREEN_ID AND RLSCR.ROLE_ID=:ROLE_ID and rlscr.isactive=true WHERE OMS.MOD_ID=:MOD_ID AND SCRNS.ISACTIVE=true  AND SCRNS.SCREEN_ID!=5 ORDER BY SCRNS.SCREEN_NM;


#queries.listOfMappedUsers=SELECT ERX.EMP_ROLE_ID,ERX.ISACTIVE,EIR.EMP_ID,EIR.EMP_USER_NM,EIR.EMP_CODE FROM EMPLOYEES_INFO_REF EIR LEFT JOIN PUBLIC.EMPLOYEE_ROLE_XREF ERX ON EIR.EMP_ID=ERX.EMP_ID WHERE ERX.ROLE_ID=:ROLE_ID AND ERX.ISACTIVE=TRUE AND ERX.ORG_GRP_ID=:ORG_GRP_ID AND ERX.ORG_ID=:ORG_ID ORDER BY EIR.EMP_USER_NM
 
queries.listOfMappedUsers=SELECT ERX.EMP_ROLE_ID,ERX.ISACTIVE,EIR.EMP_ID,EIR.EMP_USER_NM,EIR.EMP_CODE FROM EMPLOYEES_INFO_REF EIR JOIN PUBLIC.EMPLOYEE_ROLE_XREF ERX ON EIR.EMP_ID=ERX.EMP_ID AND ERX.ORG_ID=:ORG_ID AND ERX.ISACTIVE=TRUE AND ERX.ROLE_ID=:ROLE_ID ORDER BY EIR.EMP_USER_NM

queries.insertRoleScreen=INSERT INTO PUBLIC.ROLE_SCREEN_XREF (ROLE_ID,SCREEN_ID,ISACTIVE,PRIVILEGE_ID,ORG_ID,ORG_GRP_ID)VALUES(:ROLE_ID,:SCREEN_ID,:ISACTIVE,:PRIVILEGE_ID,:ORG_ID,:ORG_GRP_ID)

queries.updateRoleScreen=UPDATE PUBLIC.ROLE_SCREEN_XREF SET ISACTIVE=:ISACTIVE, PRIVILEGE_ID=:PRIVILEGE_ID where ROLE_SCREEN_ID=:ROLE_SCREEN_ID;


queries.fetchModules=SELECT MREF.MOD_ID,MREF.MOD_NM FROM MODULES_REF MREF JOIN ORGANISATION_MODULE_XREF OMX ON MREF.MOD_ID=OMX.MOD_ID WHERE OMX.ORG_ID=:orgId AND OMX.ORG_GRP_ID=:orgGroupId AND OMX.ISACTIVE='TRUE' AND MOD_NM!='Others' ORDER BY MREF.MOD_NM

queries.createRole=INSERT INTO ROLES_REF(ROLE_NM,MOD_ID,DESCRIPTION,ORG_ID,ORG_GRP_ID,ISACTIVE)VALUES(:ROLE_NM,:MOD_ID,:DESCRIPTION,:ORG_ID,:ORG_GRP_ID,:ISACTIVE)

queries.universalRolesByModule = SELECT ROLE_ID,ROLE_NM,IS_UNIVERSAL FROM ROLES_REF WHERE MOD_ID=:MOD_ID AND ISACTIVE='TRUE' AND IS_UNIVERSAL=TRUE
queries.fetchRoles= SELECT ROLE_ID,ROLE_NM,IS_UNIVERSAL FROM ROLES_REF WHERE ISACTIVE='TRUE' AND ORG_ID=:ORG_ID AND ORG_GRP_ID=:ORG_GRP_ID AND MOD_ID=:MOD_ID   ORDER BY  ROLE_NM


queries.getCountByRole=SELECT COUNT(*) FROM ROLES_REF WHERE ISACTIVE='TRUE'AND ORG_ID=:ORG_ID AND ORG_GRP_ID=:ORG_GRP_ID AND UPPER(ROLE_NM)=UPPER(:ROLE_NM);

queries.deleteRole=UPDATE ROLES_REF SET  ISACTIVE='false' WHERE ROLE_ID=:ROLE_ID AND ORG_ID=:ORG_ID AND ORG_GRP_ID=:ORG_GRP_ID AND MOD_ID=:MOD_ID

queries.checkCountUsersByRole=SELECT COUNT(*)  FROM EMPLOYEE_ROLE_XREF WHERE ISACTIVE='true' AND ROLE_ID=:ROLE_ID AND ORG_ID=:ORG_ID AND ORG_GRP_ID=:ORG_GRP_ID AND MOD_ID=:MOD_ID

queries.fetchModuleswithOthers=SELECT MREF.MOD_ID,MREF.MOD_NM FROM MODULES_REF MREF JOIN ORGANISATION_MODULE_XREF OMX ON MREF.MOD_ID=OMX.MOD_ID WHERE OMX.ORG_ID=:orgId AND OMX.ORG_GRP_ID=:orgGroupId AND OMX.ISACTIVE='TRUE' ORDER BY MREF.MOD_NM

queries.insertUserRoleMapping =INSERT INTO EMPLOYEE_ROLE_XREF(EMP_ID,ROLE_ID,ISACTIVE,ORG_GRP_ID,ORG_ID,MOD_ID)VALUES(:EMP_ID,:ROLE_ID,:ISACTIVE,:ORG_GRP_ID,:ORG_ID,:MOD_ID);

queries.updateUserRoleMapping=UPDATE EMPLOYEE_ROLE_XREF SET ISACTIVE=:ISACTIVE WHERE EMP_ROLE_ID=:EMP_ROLE_ID;
				
queries.checkCountUsersByRole=SELECT COUNT(*)  FROM EMPLOYEE_ROLE_XREF WHERE ISACTIVE='true' AND ROLE_ID=:ROLE_ID


#queries.listOfUnMappedUsers=SELECT ERX.EMP_ROLE_ID,ERX.ISACTIVE,EIR.EMP_ID,EIR.EMP_USER_NM,EIR.EMP_CODE FROM EMPLOYEES_INFO_REF EIR LEFT JOIN PUBLIC.EMPLOYEE_ROLE_XREF ERX ON EIR.EMP_ID!=ERX.EMP_ID WHERE ERX.ROLE_ID=:ROLE_ID AND ERX.ISACTIVE=FALSE

#queries.listOfUnMappedUsers=SELECT ERX.EMP_ROLE_ID,ERX.ISACTIVE,EIR.EMP_ID,EIR.EMP_USER_NM,EIR.EMP_CODE FROM EMPLOYEES_INFO_REF EIR LEFT JOIN PUBLIC.EMPLOYEE_ROLE_XREF ERX ON EIR.EMP_ID=ERX.EMP_ID AND ERX.ISACTIVE=FALSE AND ERX.ROLE_ID=:ROLE_ID WHERE EIR.ORG_GRP_ID=:ORG_GRP_ID AND EIR.ORG_ID=:ORG_ID AND EIR.EMP_ID NOT IN (SELECT ERX.EMP_ID FROM PUBLIC.EMPLOYEE_ROLE_XREF ERX WHERE ERX.ISACTIVE=TRUE AND ERX.ROLE_ID=:ROLE_ID AND ORG_GRP_ID=:ORG_GRP_ID AND ORG_ID=:ORG_ID) ORDER BY EIR.EMP_USER_NM



#queries.listOfDeptUsers=SELECT ER.EMP_ROLE_ID,ER.ISACTIVE,E.EMP_ID,E.EMP_USER_NM,E.EMP_CODE FROM EMPLOYEES_INFO_REF E JOIN EMPLOYEE_DEPT_XREF ED ON E.EMP_ID=ED.EMP_ID AND ED.ISACTIVE=true LEFT JOIN EMPLOYEE_ROLE_XREF ER ON E.EMP_ID=ER.EMP_ID AND ER.ORG_ID=E.ORG_ID AND ER.ROLE_ID=:ROLE_ID AND ER.ORG_GRP_ID=E.ORG_GRP_ID WHERE ED.DEPT_ID=:DEPT_ID AND E.ORG_ID=:ORG_ID AND E.ORG_GRP_ID=:ORG_GRP_ID ORDER BY E.EMP_USER_NM

queries.listOfDeptUsers=SELECT ER.EMP_ROLE_ID,ER.ISACTIVE,E.EMP_ID,E.EMP_USER_NM,E.EMP_CODE, E.IS_SHAREABLE FROM EMPLOYEES_INFO_REF E JOIN ORGANISATION_EMPLOYEE_XREF OE ON OE.EMP_ID = E.EMP_ID AND OE.ORG_ID = :ORG_ID JOIN EMPLOYEE_DEPT_XREF ED ON E.EMP_ID=ED.EMP_ID AND ED.DEPT_ID = :DEPT_ID AND ED.ISACTIVE=true LEFT JOIN EMPLOYEE_ROLE_XREF ER ON E.EMP_ID=ER.EMP_ID AND ER.ROLE_ID=:ROLE_ID AND ER.ORG_GRP_ID=E.ORG_GRP_ID ORDER BY E.EMP_USER_NM



queries.departmentsForMapping=SELECT ED.EMP_DEPT_ID, ED.ISACTIVE, D.DEPT_ID, D.DEPT_NM FROM PUBLIC.DEPARTMENT_REF D JOIN  ORGANISATION_DEPARTMENT_XREF OD ON D.DEPT_ID=OD.DEPT_ID AND OD.ISACTIVE=TRUE  AND OD.ORG_ID=:ORG_ID  AND OD.ORG_GRP_ID=:ORG_GRP_ID LEFT JOIN PUBLIC.EMPLOYEE_DEPT_XREF ED ON D.DEPT_ID=ED.DEPT_ID AND ED.EMP_ID=:EMP_ID;
queries.checkIsUniversal=SELECT IS_UNIVERSAL FROM ROLES_REF WHERE ROLE_ID=:ROLE_ID 




queries.fetchBranchType=SELECT OTR.ORG_TYPE_ID,OTR.ORG_TYPE FROM ORGANISATION_TYPE_REF OTR WHERE OTR.ORG_TYPE_ID IN (SELECT ORG_TYPE_ID FROM ORGANISATION_GROUP_TYPE_XREF OGT JOIN ORGANISATION_GROUP_REF OG ON OGT.ORG_GRP_TYPE_ID=OG.ORG_GRP_TYPE_ID WHERE ORG_GRP_ID=:ORGGROUPID) ORDER BY OTR.ORG_TYPE;
queries.gettingListOfDepartmentsForMapping=SELECT ED.EMP_DEPT_ID, ED.ISACTIVE, D.DEPT_ID, D.DEPT_NM FROM PUBLIC.DEPARTMENT_REF D JOIN  ORGANISATION_DEPARTMENT_XREF OD ON D.DEPT_ID=OD.DEPT_ID  AND OD.ORG_ID=:ORG_ID AND OD.ORG_GRP_ID=:ORG_GRP_ID AND OD.ISACTIVE=TRUE LEFT JOIN PUBLIC.EMPLOYEE_DEPT_XREF ED ON D.DEPT_ID=ED.DEPT_ID AND ED.EMP_ID=:EMP_ID;
 


queries.insertUserDeptMapping=INSERT INTO EMPLOYEE_DEPT_XREF(EMP_ID,DEPT_ID,ISACTIVE)VALUES(:EMP_ID,:DEPT_ID,:ISACTIVE)

queries.updateUserDeptMapping=UPDATE EMPLOYEE_DEPT_XREF SET ISACTIVE=:ISACTIVE WHERE EMP_DEPT_ID=:EMP_DEPT_ID;

queries.empDeptMapping = INSERT INTO PUBLIC.EMPLOYEE_DEPT_XREF(EMP_ID,DEPT_ID)VALUES(:EMP_ID,:DEPT_ID)

queries.getLoginUserRoleScreens=SELECT RSX.ROLE_SCREEN_ID,RSX.ROLE_ID,RSX.PRIVILEGE_ID,RSX.ISACTIVE,SR.SCREEN_ID,SR.SCREEN_NM FROM ROLE_SCREEN_XREF RSX JOIN SCREENS_REF SR ON RSX.SCREEN_ID=SR.SCREEN_ID WHERE RSX.ROLE_ID IN (SELECT ROLE_ID FROM EMPLOYEE_ROLE_XREF WHERE EMP_ID="+ REGID +")";

queries.gettingListOfDesignations= SELECT DESIGNATION_ID,DESIGNATION,ISACTIVE FROM DESIGNATION_REF WHERE ISACTIVE=TRUE  ORDER BY DESIGNATION;

queries.getLoginUserRoleScreens=SELECT RSX.ROLE_SCREEN_ID,RSX.ROLE_ID,RSX.PRIVILEGE_ID,RSX.ISACTIVE,SR.SCREEN_ID,SR.SCREEN_NM FROM ROLE_SCREEN_XREF RSX JOIN SCREENS_REF SR ON RSX.SCREEN_ID=SR.SCREEN_ID WHERE RSX.ROLE_ID IN (SELECT ROLE_ID FROM EMPLOYEE_ROLE_XREF WHERE EMP_ID="+ REGID +")";

queries.empOrgMapping = INSERT INTO PUBLIC.ORGANISATION_EMPLOYEE_XREF(EMP_ID,ORG_ID,IS_SHAREABLE) VALUES (:EMP_ID,:ORG_ID,:IS_SHAREABLE)
queries.insertDesgination=  INSERT INTO EMPLOYEE_DESIGNATION_XREF(EMP_ID,DESIGNATION_ID,ISACTIVE)VALUES(:EMP_ID,:DESIGNATION_ID,true)


#queries.fetchBranches=SELECT OE.ORG_ID,O.ORG_NM,OE.ISACTIVE FROM EMPLOYEES_INFO_REF E LEFT JOIN ORGANISATION_EMPLOYEE_XREF OE ON E.EMP_ID=OE.EMP_ID AND OE.ISACTIVE=TRUE AND OE.IS_SHAREABLE=TRUE LEFT JOIN ORGANISATION_REF O ON OE.ORG_ID=O.ORG_ID AND O.IS_HEAD_OFFICE=FALSE AND O.ISACTIVE=TRUE WHERE E.ISACTIVE=TRUE AND E.ORG_GRP_ID=:OrgGroupId
queries.fetchBranches=SELECT O.ORG_ID, O.ORG_NM, OE.ISACTIVE FROM ORGANISATION_REF O LEFT JOIN ORGANISATION_EMPLOYEE_XREF OE ON O.ORG_ID = OE.ORG_ID AND OE.EMP_ID =:EMP_ID WHERE O.ORG_GRP_ID=:ORG_GRP_ID AND O.IS_HEAD_OFFICE = FALSE AND O.ISACTIVE=TRUE ORDER BY O.ORG_NM

#queries.updateDesgination=  UPDATE EMPLOYEE_DESIGNATION_XREF SET DESIGNATION_ID=:DESIGNATION_ID WHERE EMP_ID=:EMP_ID
queries.fetchOrganization=SELECT OE.ORG_ID,O.ORG_NM,OE.ISACTIVE FROM EMPLOYEES_INFO_REF E LEFT JOIN ORGANISATION_EMPLOYEE_XREF OE ON E.EMP_ID=OE.EMP_ID AND OE.ISACTIVE=TRUE AND OE.IS_SHAREABLE=TRUE LEFT JOIN ORGANISATION_REF O ON OE.ORG_ID=O.ORG_ID AND O.IS_HEAD_OFFICE=FALSE AND O.ISACTIVE=TRUE WHERE E.ISACTIVE=TRUE AND E.ORG_GRP_ID=:ORG_GRP_ID
queries.queryDeleteEmpDeptmap=UPDATE EMPLOYEE_DEPT_XREF SET ISACTIVE= FALSE  WHERE EMP_ID=:EMP_ID;
queries.queryDeleteEmpDesignationmap=UPDATE EMPLOYEE_DESIGNATION_XREF SET ISACTIVE=FALSE   WHERE EMP_ID=:EMP_ID
queries.queryDeleteEmp=UPDATE EMPLOYEES_INFO_REF SET ISACTIVE= FALSE  WHERE EMP_ID=:EMP_ID

queries.fetchingDepartmentForMapping=SELECT D.DEPT_ID,D.DEPT_NM,OD.ISACTIVE FROM DEPARTMENT_REF D JOIN  ORGANISATION_DEPARTMENT_XREF OD ON D.DEPT_ID=OD.DEPT_ID AND OD.ISACTIVE=TRUE  AND OD.ORG_ID=:ORG_ID AND OD.ORG_GRP_ID=:ORG_GRP_ID WHERE D.ISACTIVE=:ISACTIVE ORDER BY D.DEPT_NM

queries.fetchValueBranches=SELECT ORG_ID,ORG_NM,ISACTIVE FROM ORGANISATION_REF WHERE IS_HEAD_OFFICE=FALSE AND ORG_GRP_ID=:ORG_GRP_ID AND ISACTIVE=TRUE
queries.listOfModules=SELECT MR.MOD_ID, MR.MOD_NM FROM MODULES_REF MR  JOIN ORGANISATION_MODULE_XREF OMX ON OMX.MOD_ID=MR.MOD_ID AND OMX.ISACTIVE=TRUE AND OMX.ORG_ID=:ORG_ID;

queries.fetchOrganisation= SELECT * FROM ORGANISATION_REF WHERE ISACTIVE=TRUE AND ORG_ID=:ORG_ID ORDER BY ORG_NM


queries.updateProviderImagePath=UPDATE EMPLOYEES_INFO_REF SET IMAGE_PATH=:IMAGE_PATH WHERE EMP_ID=:EMP_ID

queries.insertServiceAmount=INSERT INTO BILLING.BILL_SERVICES_AMOUNT_TRANS(SERVICE_ID,SERVICE_CAT1_AMT,SERVICE_CAT2_AMT,SERVICE_CAT3_AMT,SERVICE_CAT4_AMT,START_DT,ORG_ID,ORG_GRP_ID) VALUES (:SERVICE_ID,:SERVICE_CAT1_AMT,:SERVICE_CAT2_AMT,:SERVICE_CAT3_AMT,:SERVICE_CAT4_AMT,:START_DT,:ORG_ID,:ORG_GRP_ID)

queries.checkEndDateForService=SELECT COUNT(*) FROM BILLING.BILL_SERVICES_AMOUNT_TRANS WHERE ISACTIVE='TRUE'AND SERVICE_ID=:SERVICE_ID AND ORG_ID=:ORG_ID AND ORG_GRP_ID=:ORG_GRP_ID AND END_DT IS NULL

queries.updatePatientImagePath=UPDATE PATIENT_INFO_REF SET IMAGE_PATH=:IMAGE_PATH WHERE PATIENT_ID=:PATIENT_ID

queries.updateLogoPath=UPDATE ORGANISATION_GROUP_REF SET LOGO_PATH=:LOGO_PATH WHERE ORG_GRP_ID=:ORG_GRP_ID

queries.creatingUserAtGroupCreation=INSERT INTO EMPLOYEES_INFO_REF(EMP_ID,EMP_USER_NM,MOBILE_NO,EMAIL_ID) VALUES (:EMP_ID,:EMP_USER_NM,:MOBILE_NO,:EMAIL_ID)
#queries.checkingUserHasOrganisationGroup=SELECT COUNT(*) FROM ORGANISATION_REF WHERE ORG_GRP_ID=:ORG_GRP_ID AND ISACTIVE=:ISACTIVE AND IS_HEAD_OFFICE=:IS_HEAD_OFFICE;
queries.insertingRoleFortheGroupEmployee=INSERT INTO EMPLOYEE_ROLE_XREF(ROLE_ID,ISACTIVE,EMP_ID) VALUES (:ROLE_ID,:ISACTIVE,:EMP_ID) ;


queries.updateHeadofficeDetails=UPDATE PUBLIC.ORGANISATION_REF SET HOS_BED_TYPE_ID = :HOS_BED_TYPE_ID,DM_HM_NO = :DM_HM_NO,REGISTER_NO = :REGISTER_NO,ROHINI_NO = :ROHINI_NO, SERVICE_TAX_NO = :SERVICE_TAX_NO,TAN_NO = :TAN_NO,ADDRESS_LINE1 = :ADDRESS_LINE1,ADDRESS_LINE2 = :ADDRESS_LINE2,CITY_NM = :CITY_NM,DISTRICT_NM = :DISTRICT_NM,STATE_NM = :STATE_NM,COUNTRY_NM = :COUNTRY_NM,PINCODE = :PINCODE ,ZOHO_REF_ID=:ZOHO_REF_ID  WHERE ORG_ID = :ORG_ID AND ORG_GRP_ID=:ORG_GRP_ID ;



queries.fetchHeadOffice= SELECT IS_HEAD_OFFICE FROM ORGANISATION_REF WHERE ISACTIVE=TRUE AND ORG_ID=:ORG_ID


queries.regPatient=INSERT INTO PATIENT_INFO_REF(PATIENT_ID,PATIENT_USER_NM,PATIENT_PASSWORD,GENDER, BIRTH_DT, EMAIL_ID,MOBILE_NO, PINCODE,LOGIN_STATUS)VALUES(:PATIENT_ID,:PATIENT_USER_NM,:PATIENT_PASSWORD,:GENDER,:BIRTH_DT,:EMAIL_ID,:MOBILE_NO,:PINCODE,:LOGIN_STATUS)


 queries.getServiceUntiPrice=SELECT SERVICE_CAT1_AMT FROM BILLING.BILL_SERVICES_AMOUNT_TRANS WHERE ORG_GRP_ID =:org_grp_id AND ORG_ID =:org_id  AND SERVICE_CODE=:SERVICE_CODE AND START_DT IN ( SELECT START_DT FROM BILLING.BILL_SERVICES_AMOUNT_TRANS  WHERE START_DT =:start_dt AND ORG_GRP_ID =:org_grp_id AND ORG_ID =:org_id AND SERVICE_CODE =:SERVICE_CODE)
                              
 queries.updatePatientDetails=UPDATE PUBLIC.PATIENT_INFO_REF SET AADHAAR_NO=:AADHAAR_NO,COUNTRY_NM=:COUNTRY_NM ,STATE_NM=:STATE_NM,DISTRICT_NM=:DISTRICT_NM, CITY_NM=:CITY_NM ,ADDRESS_LINE1=:ADDRESS_LINE1,ADDRESS_LINE2=:ADDRESS_LINE2 WHERE PATIENT_ID=:PATIENT_ID
 
 queries.CreateOrganisation=INSERT INTO EMPLOYEES_INFO_REF(EMP_ID,EMP_USER_NM, EMP_PASSWORD,FIRST_NM,EMAIL_ID,MOBILE_NO,ORG_ID,ORG_GRP_ID,IS_SHAREABLE,USER_TYPE,ACTIVATION_STATUS) VALUES (:EMP_ID,:EMP_USER_NM,:EMP_PASSWORD,:FIRST_NM,:EMAIL_ID,:MOBILE_NO,:ORG_ID,:ORG_GRP_ID,:IS_SHAREABLE,:USER_TYPE,:ACTIVATION_STATUS)    
 
 #queries.empSearch=SELECT EMPLOYEES_INFO_REF.EMP_ID,EMPLOYEES_INFO_REF.EMP_USER_NM,ORGANISATION_EMPLOYEE_XREF.ORG_ID FROM PUBLIC.EMPLOYEES_INFO_REF INNER JOIN PUBLIC.ORGANISATION_EMPLOYEE_XREF ON EMPLOYEES_INFO_REF.EMP_ID=ORGANISATION_EMPLOYEE_XREF.EMP_ID WHERE EMPLOYEES_INFO_REF.EMP_USER_NM LIKE '%'||:USERNAME||'%' AND EMPLOYEES_INFO_REF.ISACTIVE='TRUE' AND EMPLOYEES_INFO_REF.ORG_GRP_ID=:ORGGROUPID ORDER BY EMPLOYEES_INFO_REF.EMP_USER_NM
 
 queries.empSearch=SELECT EMPLOYEES_INFO_REF.EMP_ID,EMPLOYEES_INFO_REF.EMP_USER_NM,ORGANISATION_EMPLOYEE_XREF.ORG_ID FROM PUBLIC.EMPLOYEES_INFO_REF INNER JOIN PUBLIC.ORGANISATION_EMPLOYEE_XREF ON EMPLOYEES_INFO_REF.EMP_ID=ORGANISATION_EMPLOYEE_XREF.EMP_ID AND EMPLOYEES_INFO_REF.ORG_ID=ORGANISATION_EMPLOYEE_XREF.ORG_ID WHERE EMPLOYEES_INFO_REF.EMP_USER_NM LIKE '%'||:USERNAME||'%' AND EMPLOYEES_INFO_REF.ISACTIVE='TRUE' AND EMPLOYEES_INFO_REF.ORG_GRP_ID=:ORG_GRP_ID AND EMPLOYEES_INFO_REF.ORG_ID=:ORG_ID ORDER BY EMPLOYEES_INFO_REF.EMP_USER_NM
 
queries.getEmployeeDetails=SELECT * FROM EMPLOYEES_INFO_REF WHERE EMP_ID =:EMP_ID

queries.getPatientDetails=SELECT * FROM  PATIENT_INFO_REF WHERE PATIENT_ID=:PATIENT_ID

#queries.getEmpProfile=SELECT EMP_ID, EMP_USER_NM,EMP_PASSWORD, FIRST_NM, EMAIL_ID,GENDER, AADHAAR_NO, ADDRESS_LINE1, ALTERNATE_CONTACT_NO, ADDRESS_LINE2, BIRTH_DT, MIDDLE_NM, DISTRICT_NM, STATE_NM, COUNTRY_NM, MOBILE_NO, PINCODE, ORG_ID,ORG_GRP_ID, LOGIN_STATUS,IMAGE_PATH,USER_TYPE FROM EMPLOYEES_INFO_REF EMP WHERE  ISACTIVE=TRUE AND EMP_ID = :EMP_ID;
                               
queries.listOfUnMappedUsers=SELECT 0 AS EMP_ROLE_ID,FALSE AS ISACTIVE,EIR.EMP_ID,EIR.EMP_USER_NM,EIR.EMP_CODE, EIR.IS_SHAREABLE FROM EMPLOYEES_INFO_REF EIR JOIN PUBLIC.ORGANISATION_EMPLOYEE_XREF OEX ON EIR.EMP_ID = OEX.EMP_ID AND OEX.ORG_ID=:ORG_ID WHERE EIR.ISACTIVE=true and  EIR.EMP_ID NOT IN (SELECT ERX.EMP_ID FROM PUBLIC.EMPLOYEE_ROLE_XREF ERX WHERE ERX.ISACTIVE=TRUE AND ERX.ROLE_ID=:ROLE_ID AND ORG_GRP_ID=:ORG_GRP_ID AND ORG_ID=:ORG_ID) ORDER BY EIR.EMP_USER_NM                              

queries.checkIsUniversalByRoleName=SELECT COUNT(*) FROM ROLES_REF WHERE ROLE_NM=:ROLE_NM AND IS_UNIVERSAL=TRUE


queries.updateOrganisation=UPDATE ORGANISATION_REF SET HOS_BED_TYPE_ID=:HOS_BED_TYPE_ID  WHERE ORG_ID=:ORG_ID

queries.insertFeatureScreeDetails = INSERT INTO PUBLIC.WISHLIST_TRANS(WISHLIST_ID, EMP_USER_NM, MOD_ID, SUBJECT_LINE, DESCRIPTION, FILE_PATH, ISACTIVE, CREATED_DTTM, ACCOUNT_TYPE)	VALUES (:WISHLIST_ID, :EMP_USER_NM, :MOD_ID, :SUBJECT_LINE, :DESCRIPTION, :FILE_PATH, :ISACTIVE, :CREATED_DTTM, :ACCOUNT_TYPE);

#queries.fetchSuggestedFeature=SELECT * FROM PUBLIC.WISHLIST_TRANS WHERE ISACTIVE=:ISACTIVE ORDER BY CREATED_DTTM DESC


queries.fetchAccountActivate=SELECT EIR.EMP_USER_NM, EIR.ACTIVATION_STATUS,ORG.ORG_NM, ORG.ADDRESS_LINE1, ORG.ADDRESS_LINE2, EIR.user_type='superAdmin', ORG.CITY_NM, ORG.CONTACT_NO, ORG.TAN_NO, ORG.VAT_NO, ORG.DM_HM_NO, ORG.SERVICE_TAX_NO,ORG.ROHINI_NO,ORG.CREATED_DTTM FROM PUBLIC.EMPLOYEES_INFO_REF EIR JOIN PUBLIC.ORGANISATION_REF ORG ON EIR.ORG_ID = ORG.ORG_ID AND EIR.ORG_GRP_ID = ORG.ORG_GRP_ID  AND ACTIVATION_STATUS='FALSE'

queries.updateAccountActivate=UPDATE PUBLIC.EMPLOYEES_INFO_REF SET ACTIVATION_STATUS=:ACTIVATION_STATUS WHERE EMP_ID=:EMP_ID


queries.fetchSuggestedFeature=SELECT EIR.EMAIL_ID, EIR.EMP_USER_NM, MR.MOD_NM, WLT.EMP_USER_NM, EIR.MOBILE_NO, WLT.MOD_ID, WLT.SUBJECT_LINE, WLT.DESCRIPTION, WLT.FILE_PATH, WLT.ACCOUNT_TYPE, WLT.CREATED_DTTM FROM PUBLIC.WISHLIST_TRANS  WLT JOIN PUBLIC.EMPLOYEES_INFO_REF EIR ON WLT.EMP_USER_NM = EIR.EMP_USER_NM  JOIN  PUBLIC.MODULES_REF MR ON WLT.MOD_ID=MR.MOD_ID ORDER BY WLT.CREATED_DTTM

queries.insertCareersDetails=INSERT INTO PUBLIC.CAREERS_INFO_TRANS(TITLE,KEY_SKILLS,FULL_NM,EMAIL_ID,CONTACT_NO,EXPECTED_CTC,NOTICE_PERIOD,FILE_PATH,EXPERIENCE,LOCATION_NM) VALUES (:TITLE,:KEY_SKILLS,:FULL_NM,:EMAIL_ID,:CONTACT_NO,:EXPECTED_CTC,:NOTICE_PERIOD,:FILE_PATH,:EXPERIENCE,:LOCATION_NM)

queries.insertWebSitePlanDetails=INSERT INTO PUBLIC.WEBSITE_PLANS_REF(DESCRIPTION,PLAN_NM, ORG_NM, FULL_NM, EMAIL_ID, CONTACT_NO ,ISACTIVE) VALUES (:DESCRIPTION,:PLAN_NM,:ORG_NM,:FULL_NM,:EMAIL_ID,:CONTACT_NO,:ISACTIVE)

queries.fetchWebSitePlanDetails=SELECT PLAN_ID, PLAN_NM, ORG_NM, FULL_NM, EMAIL_ID, CONTACT_NO, RQST_DTTM,ISACTIVE, CREATED_USR_ID, CREATED_DTTM FROM PUBLIC.WEBSITE_PLANS_REF WHERE ISACTIVE=TRUE ORDER BY CREATED_DTTM DESC
#queries.qureyUpdateDoctorHeadofficeDetails=UPDATE PUBLIC.EMPLOYEES_INFO_REF SET BIRTH_DT=:BIRTH_DT,GENDER=:GENDER,DOCTOR_REGISTER_NO=:DOCTOR_REGISTER_NO,ADDRESS_LINE1=:ADDRESS_LINE1,ADDRESS_LINE2=:ADDRESS_LINE2,PINCODE=:PINCODE,CITY=:CITY,DISTRICT_NM=:DISTRICT_NM,STATE_NM=:STATE_NM,COUNTRY_NM=:COUNTRY_NM WHERE EMP_ID=:EMP_ID AND ORG_GRP_ID=:ORG_GRP_ID AND ORG_ID=:ORG_ID;


 queries.fetchUserLog=SELECT EIR.FIRST_NM, EIR.USER_TYPE, EIR.EMP_ID FROM PUBLIC.EMPLOYEES_INFO_REF EIR JOIN PUBLIC.ORGANISATION_EMPLOYEE_XREF OEX ON EIR.EMP_ID=OEX.EMP_ID WHERE OEX.ORG_ID=:ORG_ID AND OEX.ORG_GRP_ID=:ORG_GRP_ID
   
